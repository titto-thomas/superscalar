|queue
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => r_err~reg0.CLK
clk => memory[7][0].CLK
clk => memory[7][1].CLK
clk => memory[7][2].CLK
clk => memory[7][3].CLK
clk => memory[7][4].CLK
clk => memory[7][5].CLK
clk => memory[7][6].CLK
clk => memory[7][7].CLK
clk => memory[6][0].CLK
clk => memory[6][1].CLK
clk => memory[6][2].CLK
clk => memory[6][3].CLK
clk => memory[6][4].CLK
clk => memory[6][5].CLK
clk => memory[6][6].CLK
clk => memory[6][7].CLK
clk => memory[5][0].CLK
clk => memory[5][1].CLK
clk => memory[5][2].CLK
clk => memory[5][3].CLK
clk => memory[5][4].CLK
clk => memory[5][5].CLK
clk => memory[5][6].CLK
clk => memory[5][7].CLK
clk => memory[4][0].CLK
clk => memory[4][1].CLK
clk => memory[4][2].CLK
clk => memory[4][3].CLK
clk => memory[4][4].CLK
clk => memory[4][5].CLK
clk => memory[4][6].CLK
clk => memory[4][7].CLK
clk => memory[3][0].CLK
clk => memory[3][1].CLK
clk => memory[3][2].CLK
clk => memory[3][3].CLK
clk => memory[3][4].CLK
clk => memory[3][5].CLK
clk => memory[3][6].CLK
clk => memory[3][7].CLK
clk => memory[2][0].CLK
clk => memory[2][1].CLK
clk => memory[2][2].CLK
clk => memory[2][3].CLK
clk => memory[2][4].CLK
clk => memory[2][5].CLK
clk => memory[2][6].CLK
clk => memory[2][7].CLK
clk => memory[1][0].CLK
clk => memory[1][1].CLK
clk => memory[1][2].CLK
clk => memory[1][3].CLK
clk => memory[1][4].CLK
clk => memory[1][5].CLK
clk => memory[1][6].CLK
clk => memory[1][7].CLK
clk => memory[0][0].CLK
clk => memory[0][1].CLK
clk => memory[0][2].CLK
clk => memory[0][3].CLK
clk => memory[0][4].CLK
clk => memory[0][5].CLK
clk => memory[0][6].CLK
clk => memory[0][7].CLK
clk => w_err~reg0.CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => rd_ptr[4].CLK
clk => rd_ptr[5].CLK
clk => rd_ptr[6].CLK
clk => rd_ptr[7].CLK
clk => rd_ptr[8].CLK
clk => rd_ptr[9].CLK
clk => rd_ptr[10].CLK
clk => rd_ptr[11].CLK
clk => rd_ptr[12].CLK
clk => rd_ptr[13].CLK
clk => rd_ptr[14].CLK
clk => rd_ptr[15].CLK
clk => rd_ptr[16].CLK
clk => rd_ptr[17].CLK
clk => rd_ptr[18].CLK
clk => rd_ptr[19].CLK
clk => rd_ptr[20].CLK
clk => rd_ptr[21].CLK
clk => rd_ptr[22].CLK
clk => rd_ptr[23].CLK
clk => rd_ptr[24].CLK
clk => rd_ptr[25].CLK
clk => rd_ptr[26].CLK
clk => rd_ptr[27].CLK
clk => rd_ptr[28].CLK
clk => rd_ptr[29].CLK
clk => rd_ptr[30].CLK
clk => rd_ptr[31].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => wr_ptr[4].CLK
clk => wr_ptr[5].CLK
clk => wr_ptr[6].CLK
clk => wr_ptr[7].CLK
clk => wr_ptr[8].CLK
clk => wr_ptr[9].CLK
clk => wr_ptr[10].CLK
clk => wr_ptr[11].CLK
clk => wr_ptr[12].CLK
clk => wr_ptr[13].CLK
clk => wr_ptr[14].CLK
clk => wr_ptr[15].CLK
clk => wr_ptr[16].CLK
clk => wr_ptr[17].CLK
clk => wr_ptr[18].CLK
clk => wr_ptr[19].CLK
clk => wr_ptr[20].CLK
clk => wr_ptr[21].CLK
clk => wr_ptr[22].CLK
clk => wr_ptr[23].CLK
clk => wr_ptr[24].CLK
clk => wr_ptr[25].CLK
clk => wr_ptr[26].CLK
clk => wr_ptr[27].CLK
clk => wr_ptr[28].CLK
clk => wr_ptr[29].CLK
clk => wr_ptr[30].CLK
clk => wr_ptr[31].CLK
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => memory.OUTPUTSELECT
rst => w_err.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => r_err.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[0] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[1] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[2] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[3] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[4] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[5] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[6] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
data_in[7] => memory.DATAB
rd_en => READ_POINTER.IN1
rd_en => READ_DATA.IN1
rd_en => READ_DATA.IN1
rd_en => COUNTER.IN0
rd_en => COUNTER.IN0
wr_en => WRITE_POINTER.IN1
wr_en => WRITE_DATA.IN1
wr_en => WRITE_DATA.IN1
wr_en => COUNTER.IN1
wr_en => COUNTER.IN1
data_out[0] << data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] << data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] << data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] << data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] << data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] << data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] << data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] << data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty << Equal1.DB_MAX_OUTPUT_PORT_TYPE
full << Equal0.DB_MAX_OUTPUT_PORT_TYPE
w_err << w_err~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_err << r_err~reg0.DB_MAX_OUTPUT_PORT_TYPE


